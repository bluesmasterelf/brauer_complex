$include <firstentry.maple> ;
$include <X_q.maple> ;
$include <Y_q.maple> ;
$include <X_qsort.maple> ;

$include <labelmakers.maple> ;
$include <r1.maple> ;
$include <r2.maple> ;
$include <t1.maple> ;
$include <t2.maple> ;
$include <s2.maple> ;
$include <s1.maple> ;

#$include <t1test.maple> ;
#$include <weighttest.maple> ;

$include <bigiterator.maple> ;
$include <tori.maple> ;
$include <characterfamilies.maple> ;
$include <weighttwister.maple> ;
$include <stabilizer.maple> ;

interface(rtablesize=infinity):

que := 8; 

r1, r1_lt := calculate_r1(que):
r2, r2_lt := calculate_r2(que):
t1, t1_lt := calculate_t1(que):
t2, t2_lt := calculate_t2(que):
s2, s2_lt := calculate_s2(que):
s1, s1_lt := calculate_s1(que):

nrchars := (que+1) * (que^2+que+4);
nrBrchars := que^3;

DM := Matrix(nrchars, nrBrchars):
DMlbl := Array(1..nrchars, datatype=string):



X_q := calculate_X_q(que):
#Y_q:= calculate_Y_q(que);
X_qsort(X_q,que):
bigiterator(que,DM,X_q,t1_lt,t2_lt,r1_lt,r2_lt,s1_lt,s2_lt,DMlbl):
stabilizer(que,X_q,DM);


#DM;
test:=Array(1..nrchars, fill=0, datatype=integer):
firstentry(nrchars, nrBrchars, DM, test):
test;


for i from 1 to 15 do
    DM[i];
end do;

#for i from 1 to 52 do
#  X_q[i];
#end do;


######################################################################
#DMcolumntest:= Matrix(1,nrchars):

#for i from 1 to nrchars do
#    DMcolumntest[1,i]:=DM[i,512]:
#end do:

#DMcolumntest;

#DMlbl;
######################################################################
#writeto("DM.txt");
#DM;


#DMLambdalbl, DMPhilbl := calculatelbls(X_q,que):
#DMLambdalbl;

#r1;#r1_lt[14 mod order];
#r2;
#t1;#t1_lt[5 mod 4];
#t2;#t2_lt[5 mod order];
#s2;#s1;



for i from 1 to nrchars do

    FileTools[Text][WriteString]("output.txt",DMlbl[i]):
    for j from 1 to nrBrchars do

        FileTools[Text][WriteString]("output.txt", cat(" & ",convert( DM[i,j],string)));

    end do:

    FileTools[Text][WriteString]("output.txt", "\\\\\n"):

end do:

FileTools[Text][Close]("output.txt"):