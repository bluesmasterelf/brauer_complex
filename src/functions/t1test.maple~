#this is a collection of ten functions, corresponding to tori. They should all accept order, and a twisted weight from the weight twister function

tone := proc(a,b,c,column,order,DM::Matrix,t1_lt)

#manage the parameter sets via lookuptables here
	local a1:=a;
	local b1:=b;
	local c1:=c;

#if a mod (order-1) = 0 then a1 := 0:
#    else a1 := t1_lt[a mod (order-1)]:
#    end if;
#if b mod (order-1)= 0  then b1 := 0:
#    else b1 := t1_lt[b mod (order-1)]:
#    end if;
#if c mod (order-1) = 0  then c1 := 0:
#    else c1 := t1_lt[c mod (order-1)]:     #this is the simplest case of parameter management in the entire complex
#    end if;

#Begin if/else tree for D-L chars

if a1=0 then

DM[2,1]:=1;

elif b1=0 then

DM[3,1]:=2;
    
elif c1=0 then
    if a1=b1 then

   DM[4,1]:=3; 

     else 

     DM[5,1]:=4;
	  end if;   #not sure if this will cause problems###########!!!#################

elif a1=c1 then
     DM[6,1]:=5;
    
elif b1=c1 then     #this is insufficient, we require abb and aab could have 211 and 221 both decreasing

    DM[7,1]:=6;
elif a1=b1
     DM[8,1]:=7;
else

     DM[9,1]:=8;

#else some kind of error message throw catch?

end if;

end proc;

#########################################################
#########################################################
