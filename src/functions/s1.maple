calculate_s1 := proc(order)

  local max_value := order ^ 3 - 1;
  local size := order ^ 3 -  order;

  local number_columns := 6;
  local number_rows := size / 6;

  local s1_matrix := Matrix(number_rows, number_columns);
  local s1_lookup_table := Array(1 .. max_value - 1, fill=0, datatype=integer);

  local is_generated := Array(1 .. max_value - 1, fill=false, datatype=boolean);

  local current_number := 0;
  local current_row := 1;
  local current_size := 0;

  local column_two_value := 0;
  local column_three_value := 0;
  local column_four_value := 0;
  local column_five_value :=0;
  local column_six_value :=0;


  local row := 0;
  local column := 0;

  while not (current_size = size)  do

	 current_number := current_number + 1;

  	 if current_number mod (order^2 + q + 1) = 0 then
		next;
	 end if; 

  	 if is_generated[current_number] then
		next;
	 end if; 

	 s1_matrix[current_row, 1] := current_number;
  	 is_generated[current_number] := true;

	 column_two_value := (order * current_number) mod max_value;
	 s1_matrix[current_row, 2] := column_two_value;
  	 is_generated[column_two_value] := true;

	 column_three_value := (order ^ 2 * current_number) mod max_value;
	 s1_matrix[current_row, 3] := column_three_value;
  	 is_generated[column_three_value] := true;

	 column_four_value := ( - order ^ 2 * current_number) mod max_value;
	 s1_matrix[current_row, 4] := column_four_value;
  	 is_generated[column_four_value] := true;

	 column_five_value := (- order * current_number) mod max_value;
         s1_matrix[current_row, 5] := column_four_value;
         is_generated[column_five_value] := true;	 

	 column_six_value := ( - current_number) mod max_value;
         s1_matrix[current_row, 6] := column_four_value;
         is_generated[column_six_value] := true;

	 current_row := current_row + 1;
	 current_size := current_size + 6;

  end do; 

  for row from 1 to number_rows do

      for column from 1 to 6 do

            s1_lookup_table[s1_matrix[row, column]] := s1_matrix[row, 1];

      end do;

  end do;

  return s1_matrix, s1_lookup_table;

end proc:

